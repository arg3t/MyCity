/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.yigitcolakoglu.master_app;
import java.awt.AlphaComposite;
import java.io.*;
import java.net.*;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.util.Base64;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.json.JSONObject;

/**
 *
 * @author yigit
 */
public class cameraForm extends javax.swing.JFrame {

    /**
     * Creates new form cameraForm
     */
    public cameraForm() {
        initComponents();
    }
    private ServerSocket server;
    private Socket client;
    private Thread running = null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        camera_full_label = new javax.swing.JLabel();
        camera_cut_label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        gpu_usage = new javax.swing.JLabel();
        cpu_usage = new javax.swing.JLabel();
        ram_usage = new javax.swing.JLabel();
        gpu_temp = new javax.swing.JLabel();
        cpu_temp = new javax.swing.JLabel();
        ram_temp = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fan_rpm = new javax.swing.JLabel();
        ambulance_button = new javax.swing.JButton();
        intersection_button = new javax.swing.JButton();
        bus_button = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        camera_full_label.setText(" ");

        camera_cut_label.setText("camera_cut");

        jLabel1.setText("Name");

        jLabel2.setText("Usage");

        jLabel3.setText("Temp");

        jLabel4.setText("GPU");

        jLabel5.setText("CPU");

        jLabel6.setText("RAM");

        gpu_usage.setText("10%");

        cpu_usage.setText("20%");

        ram_usage.setText("56%");

        gpu_temp.setText("10C");

        cpu_temp.setText("76C");

        ram_temp.setText("40C");

        jLabel7.setIcon(new javax.swing.ImageIcon("/home/yigit/projects/MyCity/traffic_analyzer/master_app/src/main/java/me/yigitcolakoglu/master_app/fan.png")); // NOI18N
        jLabel7.setText("jLabel7");

        fan_rpm.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        fan_rpm.setText("2500 RPM");

        ambulance_button.setText("Ambulance");
        ambulance_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambulance_buttonActionPerformed(evt);
            }
        });

        intersection_button.setText("Intersection");
        intersection_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intersection_buttonActionPerformed(evt);
            }
        });

        bus_button.setText("Bus");
        bus_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bus_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(camera_full_label, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(ambulance_button, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217)
                        .addComponent(intersection_button, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(camera_cut_label, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(fan_rpm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(gpu_usage)
                                .addComponent(cpu_usage)
                                .addComponent(ram_usage))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ram_temp)
                                .addComponent(cpu_temp)
                                .addComponent(gpu_temp)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(bus_button, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(camera_cut_label, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(gpu_usage)
                            .addComponent(gpu_temp))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cpu_usage)
                            .addComponent(cpu_temp))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ram_usage)
                            .addComponent(ram_temp))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(fan_rpm, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(camera_full_label, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(intersection_button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ambulance_button)
                        .addComponent(bus_button)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void intersection_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intersection_buttonActionPerformed
        if(running!=null){
            try{
                server.close();
                client.close();
                running.stop();
            }catch(IOException e){
                System.out.println("IO Exception occured");
            }catch(Exception e){
                System.out.println(e.toString());
            }
        }
        running = new Thread(() -> {
            try{
                onCreate(8486,"Intersection");
            }catch(Exception e){
                System.out.println(e.toString());
            }
        });
        running.start();
    }//GEN-LAST:event_intersection_buttonActionPerformed

    private void ambulance_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambulance_buttonActionPerformed
        if(running!=null){
            try{
                server.close();
                client.close();
                running.stop();
            }catch(IOException e){
                System.out.println("IO Exception occured");
            }catch(Exception e){
                System.out.println(e.toString());
            }
        }
        running = new Thread(() -> {
            try{
                onCreate(8485,"Ambulance");
            }catch(Exception e){
                System.out.println(e.toString());
            }
        });
        running.start();
             
                

    }//GEN-LAST:event_ambulance_buttonActionPerformed

    private void bus_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bus_buttonActionPerformed
        if(running!=null){
            try{
                server.close();
                client.close();
                running.stop();
            }catch(IOException e){
                System.out.println("IO Exception occured");
            }catch(Exception e){
                System.out.println(e.toString());
            }
        }
        running = new Thread(() -> {
            try{
                onCreate(8487,"Bus");
            }catch(Exception e){
                System.out.println(e.toString());
            }
        });
        running.start();    }//GEN-LAST:event_bus_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.out.println("Reading: ");

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cameraForm().setVisible(true);
        
        }});
    }
    
    public void onCreate(int port, String name) throws Exception{
        this.camera_cut_label.setIcon(new ImageIcon());
        this.camera_full_label.setIcon(new ImageIcon());
        String fromClient = "";
        String toClient;
 
        server = new ServerSocket(port);
        System.out.println("wait for connection on port " + port);
 
        boolean run = true;
        client = server.accept();
        System.out.println("got connection on port " + port);
        BufferedImage image = null;
        byte[] imageByte;
        int null_reps = 0;
        
        while(run) {
            try{

                BufferedReader in = new BufferedReader(new InputStreamReader(client.getInputStream()));

                fromClient = in.readLine();

                if(fromClient != null) {
                    if(fromClient.trim().equals("Bye")) {
                        run = false;
                        System.out.println("socket closed");
                    }else{
                        System.out.println("received data in size: " + fromClient.length());
                        JSONObject json = new JSONObject(fromClient);
                        byte[] decodedBytes = Base64.getDecoder().decode(json.getString("image_full"));
                        ByteArrayInputStream bis = new ByteArrayInputStream(decodedBytes);
                        image = ImageIO.read(bis);
                        bis.close();
                        JSONObject dims = json.getJSONObject("image_sizes");
                        this.camera_cut_label.setIcon(new ImageIcon(resizeImage(image.getSubimage(dims.getInt("x"), dims.getInt("y"), dims.getInt("width"), dims.getInt("height")),300,300)));
                        this.camera_full_label.setIcon(new ImageIcon(resizeImage(image,900,720)));
                        JSONObject data = json.optJSONObject("load");
                        this.gpu_temp.setText(data.getString("gpu_temp"));
                        this.gpu_usage.setText(data.getString("gpu_load"));
                        this.cpu_temp.setText(data.getString("cpu_temp"));
                        this.cpu_usage.setText(data.getString("cpu_load"));
                        this.ram_temp.setText(data.getString("mem_temp"));
                        this.ram_usage.setText(data.getString("mem_load"));
                        this.fan_rpm.setText(data.getString("fan_speed"));
                        null_reps=0;
                    }
                }else{
                    null_reps +=1;
                }
            }
            catch(Exception e){
                System.out.println(fromClient);
                System.out.println(e.toString());
             }
            if (null_reps >= 100000){
                run = false;
                System.out.println("socket closed");
            }
        }
        server.close();
        client.close();
        JOptionPane.showMessageDialog(this, name +" socket server down!");
        
    }
    
    public static BufferedImage resizeImage(final Image image, int width, int height) {
        final BufferedImage bufferedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        final Graphics2D graphics2D = bufferedImage.createGraphics();
        graphics2D.setComposite(AlphaComposite.Src);
        //below three lines are for RenderingHints for better image quality at cost of higher processing time
        graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        graphics2D.setRenderingHint(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY);
        graphics2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
        graphics2D.drawImage(image, 0, 0, width, height, null);
        graphics2D.dispose();
        return bufferedImage;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ambulance_button;
    private javax.swing.JButton bus_button;
    private javax.swing.JLabel camera_cut_label;
    private javax.swing.JLabel camera_full_label;
    private javax.swing.JLabel cpu_temp;
    private javax.swing.JLabel cpu_usage;
    private javax.swing.JLabel fan_rpm;
    private javax.swing.JLabel gpu_temp;
    private javax.swing.JLabel gpu_usage;
    private javax.swing.JButton intersection_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel ram_temp;
    private javax.swing.JLabel ram_usage;
    // End of variables declaration//GEN-END:variables
}
